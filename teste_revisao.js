// Script de Teste para P√°gina de Revis√£o - Ades√£o de Colaboradores
// Este script simula a revis√£o final e finaliza√ß√£o do processo de ades√£o

console.log('=== INICIANDO TESTE DA P√ÅGINA DE REVIS√ÉO ===');

// Fun√ß√£o principal para executar o teste da revis√£o
function executarTesteRevisao() {
    console.log('\n1. Verificando se estamos na p√°gina de revis√£o...');
    
    // Verificar se estamos na p√°gina correta
    if (!window.location.pathname.includes('/revisao')) {
        console.error('‚ùå N√£o estamos na p√°gina de revis√£o!');
        console.log('üìç Navegue para: /rh/colaboradores/adesao/revisao?sessionId=SEU_SESSION_ID');
        return;
    }
    
    console.log('‚úÖ P√°gina de revis√£o carregada');
    
    // Aguardar carregamento dos dados
    setTimeout(() => {
        console.log('\n2. Verificando dados carregados...');
        verificarDadosCarregados();
        
        console.log('\n3. Simulando aceita√ß√£o dos termos...');
        aceitarTermos();
        
        console.log('\n4. Preparando para finaliza√ß√£o...');
        prepararFinalizacao();
        
    }, 2000);
}

// Fun√ß√£o para verificar se os dados foram carregados
function verificarDadosCarregados() {
    const dadosPessoais = $('#dadosPessoaisRevisao').length;
    const documentos = $('#documentosEnviados').length;
    const beneficios = $('#beneficiosSelecionados').length;
    
    console.log(`üìã Se√ß√µes encontradas:`);
    console.log(`   - Dados Pessoais: ${dadosPessoais ? '‚úÖ' : '‚ùå'}`);
    console.log(`   - Documentos: ${documentos ? '‚úÖ' : '‚ùå'}`);
    console.log(`   - Benef√≠cios: ${beneficios ? '‚úÖ' : '‚ùå'}`);
    
    // Verificar se h√° dados carregados
    if ($('#dadosPessoaisRevisao .info-row').length > 0) {
        console.log('‚úÖ Dados pessoais carregados');
    } else {
        console.log('‚ö†Ô∏è Dados pessoais n√£o encontrados');
    }
    
    if ($('#documentosEnviados .document-item').length > 0) {
        console.log('‚úÖ Documentos carregados');
    } else {
        console.log('‚ö†Ô∏è Documentos n√£o encontrados');
    }
}

// Fun√ß√£o para aceitar todos os termos
function aceitarTermos() {
    console.log('üìù Aceitando termos e condi√ß√µes...');
    
    // Aceitar termos e condi√ß√µes
    if ($('#aceitarTermos').length) {
        $('#aceitarTermos').prop('checked', true);
        console.log('‚úÖ Termos e condi√ß√µes aceitos');
    } else {
        console.log('‚ùå Checkbox de termos n√£o encontrado');
    }
    
    // Autorizar desconto em folha
    if ($('#autorizarDesconto').length) {
        $('#autorizarDesconto').prop('checked', true);
        console.log('‚úÖ Desconto em folha autorizado');
    } else {
        console.log('‚ùå Checkbox de desconto n√£o encontrado');
    }
    
    // Confirmar veracidade dos dados
    if ($('#confirmarDados').length) {
        $('#confirmarDados').prop('checked', true);
        console.log('‚úÖ Veracidade dos dados confirmada');
    } else {
        console.log('‚ùå Checkbox de confirma√ß√£o n√£o encontrado');
    }
    
    // Disparar evento de mudan√ßa para habilitar bot√£o
    $('#aceitarTermos, #autorizarDesconto, #confirmarDados').trigger('change');
    
    // Verificar se o bot√£o foi habilitado
    setTimeout(() => {
        const botaoHabilitado = !$('#btnFinalizar').prop('disabled');
        console.log(`üîò Bot√£o finalizar: ${botaoHabilitado ? 'HABILITADO ‚úÖ' : 'DESABILITADO ‚ùå'}`);
    }, 500);
}

// Fun√ß√£o para preparar a finaliza√ß√£o
function prepararFinalizacao() {
    console.log('\nüéØ PRONTO PARA FINALIZAR!');
    console.log('\nüìã Resumo do que foi feito:');
    console.log('   ‚úÖ Dados pessoais revisados');
    console.log('   ‚úÖ Documentos verificados');
    console.log('   ‚úÖ Benef√≠cios confirmados');
    console.log('   ‚úÖ Termos aceitos');
    console.log('   ‚úÖ Desconto autorizado');
    console.log('   ‚úÖ Dados confirmados');
    
    console.log('\nüöÄ Para finalizar o processo, execute:');
    console.log('   finalizarProcessoAdesao()');
}

// Fun√ß√£o para finalizar o processo (chamada manual)
function finalizarProcessoAdesao() {
    console.log('\nüîÑ FINALIZANDO PROCESSO DE ADES√ÉO...');
    
    // Verificar se todos os termos foram aceitos
    const termosAceitos = $('#aceitarTermos').is(':checked');
    const descontoAutorizado = $('#autorizarDesconto').is(':checked');
    const dadosConfirmados = $('#confirmarDados').is(':checked');
    
    if (!termosAceitos || !descontoAutorizado || !dadosConfirmados) {
        console.error('‚ùå Nem todos os termos foram aceitos!');
        console.log('üîÑ Executando aceita√ß√£o autom√°tica...');
        aceitarTermos();
        
        setTimeout(() => {
            finalizarProcessoAdesao();
        }, 1000);
        return;
    }
    
    console.log('‚úÖ Todos os termos aceitos, prosseguindo...');
    
    // Simular clique no bot√£o finalizar
    if ($('#btnFinalizar').length && !$('#btnFinalizar').prop('disabled')) {
        console.log('üéØ Clicando no bot√£o finalizar...');
        $('#btnFinalizar').click();
        
        // Monitorar o processo
        setTimeout(() => {
            monitorarFinalizacao();
        }, 1000);
    } else {
        console.error('‚ùå Bot√£o finalizar n√£o dispon√≠vel ou desabilitado');
    }
}

// Fun√ß√£o para monitorar a finaliza√ß√£o
function monitorarFinalizacao() {
    console.log('\nüëÄ Monitorando finaliza√ß√£o...');
    
    // Verificar se o loading est√° vis√≠vel
    if ($('#loadingOverlay').is(':visible')) {
        console.log('‚è≥ Loading ativo - processando...');
        
        // Continuar monitorando
        setTimeout(() => {
            monitorarFinalizacao();
        }, 2000);
    } else {
        // Verificar se o modal de sucesso apareceu
        if ($('#successModal').hasClass('show')) {
            console.log('üéâ SUCESSO! Modal de finaliza√ß√£o exibido!');
            
            const protocolo = $('#protocoloAdesao').text();
            if (protocolo) {
                console.log(`üìã Protocolo gerado: ${protocolo}`);
            }
            
            console.log('\n‚úÖ PROCESSO DE ADES√ÉO FINALIZADO COM SUCESSO!');
            console.log('\nüìß Voc√™ receber√° um e-mail com o status da solicita√ß√£o.');
            
        } else {
            console.log('‚ö†Ô∏è Finaliza√ß√£o conclu√≠da, verificando resultado...');
            
            // Verificar se h√° mensagens de erro
            const alertas = $('.alert-danger');
            if (alertas.length > 0) {
                console.error('‚ùå Erro na finaliza√ß√£o:');
                alertas.each(function() {
                    console.error(`   ${$(this).text().trim()}`);
                });
            } else {
                console.log('‚úÖ Nenhum erro detectado');
            }
        }
    }
}

// Fun√ß√£o para ir para o dashboard (ap√≥s finaliza√ß√£o)
function irParaDashboard() {
    console.log('\nüè† Redirecionando para o dashboard...');
    if (typeof irParaDashboard === 'function') {
        irParaDashboard();
    } else {
        window.location.href = '/dashboard';
    }
}

// Fun√ß√£o para exibir instru√ß√µes
function exibirInstrucoes() {
    console.log('\nüìñ INSTRU√á√ïES DE USO:');
    console.log('\n1. Navegue para a p√°gina de revis√£o:');
    console.log('   /rh/colaboradores/adesao/revisao?sessionId=SEU_SESSION_ID');
    console.log('\n2. Abra o console do navegador (F12)');
    console.log('\n3. Cole este script e execute:');
    console.log('   executarTesteRevisao()');
    console.log('\n4. Para finalizar o processo:');
    console.log('   finalizarProcessoAdesao()');
    console.log('\n5. Para ir ao dashboard ap√≥s finaliza√ß√£o:');
    console.log('   irParaDashboard()');
}

// Executar instru√ß√µes automaticamente
exibirInstrucoes();

console.log('\nüéØ Script carregado! Execute executarTesteRevisao() para come√ßar.');